{"id":"XbpM","dependencies":[{"name":"/Volumes/Projects430/Development/src/js_dev/ReactJS/piral-app/node_modules/piral-core/lib/hooks/sharedData.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Volumes/Projects430/Development/src/js_dev/ReactJS/piral-app/node_modules/piral-core/src/hooks/sharedData.ts","includedInParent":true,"mtime":499162500000},{"name":"/Volumes/Projects430/Development/src/js_dev/ReactJS/piral-app/package.json","includedInParent":true,"mtime":1583756177000},{"name":"/Volumes/Projects430/Development/src/js_dev/ReactJS/piral-app/node_modules/piral-core/package.json","includedInParent":true,"mtime":1583756136000},{"name":"/Volumes/Projects430/Development/src/js_dev/ReactJS/piral-app/node_modules/piral-core/.browserslistrc","includedInParent":true,"mtime":1583756140000},{"name":"./globalState","loc":{"line":3,"column":30},"parent":"/Volumes/Projects430/Development/src/js_dev/ReactJS/piral-app/node_modules/piral-core/lib/hooks/sharedData.js","resolved":"/Volumes/Projects430/Development/src/js_dev/ReactJS/piral-app/node_modules/piral-core/lib/hooks/globalState.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./globalState\");function t(t){var r=t||function(e){return e};return e.useGlobalState(function(e){return r(e.data)})}exports.useSharedData=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":0}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":20}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":35}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":43}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":56}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":57}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":64}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":68}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":72}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":74}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":82}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":99}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":1,"column":108}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":33},"generated":{"line":1,"column":110}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":1,"column":113}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":1,"column":117}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":17},"generated":{"line":1,"column":119}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":23},"generated":{"line":1,"column":122}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":23},"generated":{"line":1,"column":131}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":28},"generated":{"line":1,"column":134}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":18,"column":28},"generated":{"line":1,"column":141}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":144}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":151}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":9},"generated":{"line":1,"column":153}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":1,"column":168}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":24},"generated":{"line":1,"column":177}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":1,"column":180}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":29},"generated":{"line":1,"column":187}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":36},"generated":{"line":1,"column":189}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":19,"column":38},"generated":{"line":1,"column":191}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":199}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":207}},{"source":"../../src/hooks/sharedData.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":221}}],"sources":{"../../src/hooks/sharedData.ts":"import { useGlobalState } from './globalState';\nimport { SharedDataItem } from '../types';\n\n/**\n * Hook that yields the full shared data.\n * Any change to the shared data yields the new data.\n */\nexport function useSharedData(): Record<string, SharedDataItem>;\n\n/**\n * Hook that yields the selected subset of the shared data.\n * Only changes to this subset will yield a new data state.\n * @param select The subset selection.\n */\nexport function useSharedData<R>(select: (source: Record<string, SharedDataItem>) => R): R;\n\nexport function useSharedData<R>(s?: (source: Record<string, SharedDataItem>) => R) {\n  const select = s || (m => m);\n  return useGlobalState(s => select(s.data));\n}\n"},"lineCount":null}},"error":null,"hash":"1804a0dbc16169fd8196a572029f1597","cacheData":{"env":{}}}